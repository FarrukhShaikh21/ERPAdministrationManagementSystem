package erpadm.modeladm.admvo;

import erpadm.modeladm.admvo.common.SysPasswordParameterVORow;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 19 20:21:03 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SysPasswordParameterVORowImpl extends ViewRowImpl implements SysPasswordParameterVORow {


    public static final int ENTITY_SYSPASSWORDPARAMETER = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CreatedBy,
        CreatedDate,
        IsActive,
        IsDisplayOnExpiryWindow,
        MessageOnValidation,
        PasswordParameterName,
        PasswordParameterSno,
        PasswordParameterValue,
        txtSelected,
        SysPasswordPolicyLinesVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int ISDISPLAYONEXPIRYWINDOW = AttributesEnum.IsDisplayOnExpiryWindow.index();
    public static final int MESSAGEONVALIDATION = AttributesEnum.MessageOnValidation.index();
    public static final int PASSWORDPARAMETERNAME = AttributesEnum.PasswordParameterName.index();
    public static final int PASSWORDPARAMETERSNO = AttributesEnum.PasswordParameterSno.index();
    public static final int PASSWORDPARAMETERVALUE = AttributesEnum.PasswordParameterValue.index();
    public static final int TXTSELECTED = AttributesEnum.txtSelected.index();
    public static final int SYSPASSWORDPOLICYLINESVO = AttributesEnum.SysPasswordPolicyLinesVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SysPasswordParameterVORowImpl() {
    }

    /**
     * Gets SysPasswordParameter entity object.
     * @return the SysPasswordParameter
     */
    public EntityImpl getSysPasswordParameter() {
        return (EntityImpl) getEntity(ENTITY_SYSPASSWORDPARAMETER);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for IS_ACTIVE using the alias name IsActive.
     * @return the IS_ACTIVE
     */
    public String getIsActive() {
        return (String) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_ACTIVE using the alias name IsActive.
     * @param value value to set the IS_ACTIVE
     */
    public void setIsActive(String value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for IS_DISPLAY_ON_EXPIRY_WINDOW using the alias name IsDisplayOnExpiryWindow.
     * @return the IS_DISPLAY_ON_EXPIRY_WINDOW
     */
    public String getIsDisplayOnExpiryWindow() {
        return (String) getAttributeInternal(ISDISPLAYONEXPIRYWINDOW);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_DISPLAY_ON_EXPIRY_WINDOW using the alias name IsDisplayOnExpiryWindow.
     * @param value value to set the IS_DISPLAY_ON_EXPIRY_WINDOW
     */
    public void setIsDisplayOnExpiryWindow(String value) {
        setAttributeInternal(ISDISPLAYONEXPIRYWINDOW, value);
    }

    /**
     * Gets the attribute value for MESSAGE_ON_VALIDATION using the alias name MessageOnValidation.
     * @return the MESSAGE_ON_VALIDATION
     */
    public String getMessageOnValidation() {
        return (String) getAttributeInternal(MESSAGEONVALIDATION);
    }

    /**
     * Sets <code>value</code> as attribute value for MESSAGE_ON_VALIDATION using the alias name MessageOnValidation.
     * @param value value to set the MESSAGE_ON_VALIDATION
     */
    public void setMessageOnValidation(String value) {
        setAttributeInternal(MESSAGEONVALIDATION, value);
    }

    /**
     * Gets the attribute value for PASSWORD_PARAMETER_NAME using the alias name PasswordParameterName.
     * @return the PASSWORD_PARAMETER_NAME
     */
    public String getPasswordParameterName() {
        return (String) getAttributeInternal(PASSWORDPARAMETERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD_PARAMETER_NAME using the alias name PasswordParameterName.
     * @param value value to set the PASSWORD_PARAMETER_NAME
     */
    public void setPasswordParameterName(String value) {
        setAttributeInternal(PASSWORDPARAMETERNAME, value);
    }

    /**
     * Gets the attribute value for PASSWORD_PARAMETER_SNO using the alias name PasswordParameterSno.
     * @return the PASSWORD_PARAMETER_SNO
     */
    public Integer getPasswordParameterSno() {
        return (Integer) getAttributeInternal(PASSWORDPARAMETERSNO);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD_PARAMETER_SNO using the alias name PasswordParameterSno.
     * @param value value to set the PASSWORD_PARAMETER_SNO
     */
    public void setPasswordParameterSno(Integer value) {
        setAttributeInternal(PASSWORDPARAMETERSNO, value);
    }

    /**
     * Gets the attribute value for PASSWORD_PARAMETER_VALUE using the alias name PasswordParameterValue.
     * @return the PASSWORD_PARAMETER_VALUE
     */
    public String getPasswordParameterValue() {
        return (String) getAttributeInternal(PASSWORDPARAMETERVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD_PARAMETER_VALUE using the alias name PasswordParameterValue.
     * @param value value to set the PASSWORD_PARAMETER_VALUE
     */
    public void setPasswordParameterValue(String value) {
        setAttributeInternal(PASSWORDPARAMETERVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute txtSelected.
     * @return the txtSelected
     */
    public String gettxtSelected() {
        return (String) getAttributeInternal(TXTSELECTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute txtSelected.
     * @param value value to set the  txtSelected
     */
    public void settxtSelected(String value) {
        setAttributeInternal(TXTSELECTED, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SysPasswordPolicyLinesVO.
     */
    public RowIterator getSysPasswordPolicyLinesVO() {
        return (RowIterator) getAttributeInternal(SYSPASSWORDPOLICYLINESVO);
    }

    public void doErpAssignOneSysPwdParaToPolicy() {
        ViewObject vo = getDBTransaction().getRootApplicationModule().findViewObject("SysPasswordPolicyLinesDetCRUD");
            Row cr = vo.createRow();
            cr.setAttribute("PasswordParameterSno", getPasswordParameterSno());
            //cr.setAttribute("ModuleId", getModuleId());
            //cr.setAttribute("Remarks", "Copied" + getModuleAction());
            settxtSelected("Y");
            vo.insertRow(cr);
            getDBTransaction().commit();
            //getDBTransaction().rollback();
        vo.clearCache();
        vo.executeQuery();
        //executeQuery();
        //getDBTransaction().rollback();        
    } 
}

