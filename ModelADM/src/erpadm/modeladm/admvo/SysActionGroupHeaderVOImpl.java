package erpadm.modeladm.admvo;

import erpadm.modeladm.admvo.common.SysActionGroupHeaderVO;

import java.sql.Date;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 22 20:51:42 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SysActionGroupHeaderVOImpl extends ViewObjectImpl implements SysActionGroupHeaderVO {
    /**
     * This is the default constructor (do not remove).
     */
    public SysActionGroupHeaderVOImpl() {
    }
private Integer lGroupHeaderSno=0;
    /**
     * Returns the variable value for P_GROUP_HEADER_SNO.
     * @return variable value for P_GROUP_HEADER_SNO
     */
    public Integer getP_GROUP_HEADER_SNO() {
        return (Integer) ensureVariableManager().getVariableValue("P_GROUP_HEADER_SNO");
    }

    /**
     * Sets <code>value</code> for variable P_GROUP_HEADER_SNO.
     * @param value value to bind as P_GROUP_HEADER_SNO
     */
    public void setP_GROUP_HEADER_SNO(Integer value) {
        ensureVariableManager().setVariableValue("P_GROUP_HEADER_SNO", value);
    }
    @Override
    public void executeEmptyRowSet() {
        // TODO Implement this method
        super.executeEmptyRowSet();
    }
    @Override
    public void beforeRollback(TransactionEvent transactionEvent) {
        // TODO Implement this method
        try {
            lGroupHeaderSno = (Integer) this.getCurrentRow().getAttribute("GroupHeaderSno");
        } catch (Exception e) {
            // TODO: Add catch code
            lGroupHeaderSno=-1;
        }
        super.beforeRollback(transactionEvent);
    }
    @Override
    public void afterRollback(TransactionEvent transactionEvent) {
        // TODO Implement this method
        super.afterRollback(transactionEvent);
        try {
            if (lGroupHeaderSno != -1) {
                this.setNamedWhereClauseParam("P_GROUP_HEADER_SNO", lGroupHeaderSno);
                executeQuery();
            }
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
    }

    /**
     * Returns the variable value for P_ADF_USER_ID.
     * @return variable value for P_ADF_USER_ID
     */
    public Integer getP_ADF_USER_ID() {
        return (Integer) ensureVariableManager().getVariableValue("P_ADF_USER_ID");
    }

    /**
     * Sets <code>value</code> for variable P_ADF_USER_ID.
     * @param value value to bind as P_ADF_USER_ID
     */
    public void setP_ADF_USER_ID(Integer value) {
        ensureVariableManager().setVariableValue("P_ADF_USER_ID", value);
    }


    public void doAssignERPGroupToUser() {
        /*when we press undo then system unset the current row here we as setting current row that is FIRST*/
        getDBTransaction().getRootApplicationModule().findViewObject("SysUsersCRUD").first();
        
        ViewObject vo = getRootApplicationModule().findViewObject("SysActionGroupUserDetCRUD");
        RowSetIterator rsi =this.getRowSet();
        rsi.setRangeSize(-1);
        for (int i=0;i<rsi.getRowCount();i++) {
            Row r = rsi.getRowAtRangeIndex(i);
            //record might be assigned through single assignment
            if (r.getAttribute("txtSelected")== null || r.getAttribute("txtSelected").toString().equals("N")) {
                r.setAttribute("txtSelected", "Y");
                Row cr = vo.createRow();
                cr.setAttribute("GroupHeaderSno", Integer.parseInt(r.getAttribute("GroupHeaderSno").toString()) );
                //cr.setAttribute("ModuleId", r.getAttribute("ModuleId"));
                //cr.setAttribute("Remarks", "Copied" + r.getAttribute("GroupHeaderSno"));
                vo.insertRow(cr);
            }
        }
        getDBTransaction().commit();
        vo.executeQuery();
        this.executeQuery();
        //executeQuery();
        //getDBTransaction().rollback();        
    }

    /**
     * Returns the variable value for P_ADF_DATE.
     * @return variable value for P_ADF_DATE
     */
    public Date getP_ADF_DATE() {
        return (Date) ensureVariableManager().getVariableValue("P_ADF_DATE");
    }

    /**
     * Sets <code>value</code> for variable P_ADF_DATE.
     * @param value value to bind as P_ADF_DATE
     */
    public void setP_ADF_DATE(oracle.jbo.domain.Date value) {
       
        /*
         *         Date d=new Date();
       SimpleDateFormat formatter = new SimpleDateFormat("yyyy-dd-mm");  
       String strDate= formatter.format(d);  
       
       System.out.println(strDate);
         */
        ensureVariableManager().setVariableValue("P_ADF_DATE", value);
    }
    
    @Override
    public void executeQuery() {
       // java.util.Date utilDate = new java.util.Date();
       // java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
       // System.out.println("utilDate:" + utilDate);
       // System.out.println("sqlDate:" +sqlDate ); 
         super.executeQuery();
    }


}

