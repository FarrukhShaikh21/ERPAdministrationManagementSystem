package erpadm.modeladm.admeo;

import erpglobals.modelglobals.ERPEntityImpl;
import erpglobals.modelglobals.ERPGlobalPLSQLClass;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 07 13:39:56 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SmCityImpl extends ERPEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Citycode,
        Cityname,
        Countrycode,
        CallingCode,
        CityShortCode,
        CityShortName,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        ProvienceSno,
        IsActive,
        txtProvienceName,
        txtCountryName,
        CityFlag,
        Demonym,
        Emblem,
        Website,
        SmCountry,
        AdminProvience,
        SmCountry1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CITYCODE = AttributesEnum.Citycode.index();
    public static final int CITYNAME = AttributesEnum.Cityname.index();
    public static final int COUNTRYCODE = AttributesEnum.Countrycode.index();
    public static final int CALLINGCODE = AttributesEnum.CallingCode.index();
    public static final int CITYSHORTCODE = AttributesEnum.CityShortCode.index();
    public static final int CITYSHORTNAME = AttributesEnum.CityShortName.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int PROVIENCESNO = AttributesEnum.ProvienceSno.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int TXTPROVIENCENAME = AttributesEnum.txtProvienceName.index();
    public static final int TXTCOUNTRYNAME = AttributesEnum.txtCountryName.index();
    public static final int CITYFLAG = AttributesEnum.CityFlag.index();
    public static final int DEMONYM = AttributesEnum.Demonym.index();
    public static final int EMBLEM = AttributesEnum.Emblem.index();
    public static final int WEBSITE = AttributesEnum.Website.index();
    public static final int SMCOUNTRY = AttributesEnum.SmCountry.index();
    public static final int ADMINPROVIENCE = AttributesEnum.AdminProvience.index();
    public static final int SMCOUNTRY1 = AttributesEnum.SmCountry1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SmCityImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpadm.modeladm.admeo.SmCity");
    }


    /**
     * Gets the attribute value for Citycode, using the alias name Citycode.
     * @return the value of Citycode
     */
    public Integer getCitycode() {
        return (Integer) getAttributeInternal(CITYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Citycode.
     * @param value value to set the Citycode
     */
    public void setCitycode(Integer value) {
        setAttributeInternal(CITYCODE, value);
    }

    /**
     * Gets the attribute value for Cityname, using the alias name Cityname.
     * @return the value of Cityname
     */
    public String getCityname() {
        return (String) getAttributeInternal(CITYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cityname.
     * @param value value to set the Cityname
     */
    public void setCityname(String value) {
        setAttributeInternal(CITYNAME, value);
    }

    /**
     * Gets the attribute value for Countrycode, using the alias name Countrycode.
     * @return the value of Countrycode
     */
    public Integer getCountrycode() {
        return (Integer) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Countrycode.
     * @param value value to set the Countrycode
     */
    public void setCountrycode(Integer value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for CallingCode, using the alias name CallingCode.
     * @return the value of CallingCode
     */
    public String getCallingCode() {
        return (String) getAttributeInternal(CALLINGCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallingCode.
     * @param value value to set the CallingCode
     */
    public void setCallingCode(String value) {
        setAttributeInternal(CALLINGCODE, value);
    }

    /**
     * Gets the attribute value for CityShortCode, using the alias name CityShortCode.
     * @return the value of CityShortCode
     */
    public Integer getCityShortCode() {
        return (Integer) getAttributeInternal(CITYSHORTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CityShortCode.
     * @param value value to set the CityShortCode
     */
    public void setCityShortCode(Integer value) {
        setAttributeInternal(CITYSHORTCODE, value);
    }

    /**
     * Gets the attribute value for CityShortName, using the alias name CityShortName.
     * @return the value of CityShortName
     */
    public String getCityShortName() {
        return (String) getAttributeInternal(CITYSHORTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CityShortName.
     * @param value value to set the CityShortName
     */
    public void setCityShortName(String value) {
        setAttributeInternal(CITYSHORTNAME, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ProvienceSno, using the alias name ProvienceSno.
     * @return the value of ProvienceSno
     */
    public Integer getProvienceSno() {
        return (Integer) getAttributeInternal(PROVIENCESNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProvienceSno.
     * @param value value to set the ProvienceSno
     */
    public void setProvienceSno(Integer value) {
        setAttributeInternal(PROVIENCESNO, value);
    }

    /**
     * Gets the attribute value for IsActive, using the alias name IsActive.
     * @return the value of IsActive
     */
    public String getIsActive() {
        return (String) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsActive.
     * @param value value to set the IsActive
     */
    public void setIsActive(String value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for txtProvienceName, using the alias name txtProvienceName.
     * @return the value of txtProvienceName
     */
    public String gettxtProvienceName() {
        return (String) getAttributeInternal(TXTPROVIENCENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtProvienceName.
     * @param value value to set the txtProvienceName
     */
    public void settxtProvienceName(String value) {
        setAttributeInternal(TXTPROVIENCENAME, value);
    }

    /**
     * Gets the attribute value for txtCountryName, using the alias name txtCountryName.
     * @return the value of txtCountryName
     */
    public String gettxtCountryName() {
        return (String) getAttributeInternal(TXTCOUNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtCountryName.
     * @param value value to set the txtCountryName
     */
    public void settxtCountryName(String value) {
        setAttributeInternal(TXTCOUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for CityFlag, using the alias name CityFlag.
     * @return the value of CityFlag
     */
    public String getCityFlag() {
        return (String) getAttributeInternal(CITYFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for CityFlag.
     * @param value value to set the CityFlag
     */
    public void setCityFlag(String value) {
        setAttributeInternal(CITYFLAG, value);
    }

    /**
     * Gets the attribute value for Demonym, using the alias name Demonym.
     * @return the value of Demonym
     */
    public String getDemonym() {
        return (String) getAttributeInternal(DEMONYM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Demonym.
     * @param value value to set the Demonym
     */
    public void setDemonym(String value) {
        setAttributeInternal(DEMONYM, value);
    }

    /**
     * Gets the attribute value for Emblem, using the alias name Emblem.
     * @return the value of Emblem
     */
    public String getEmblem() {
        return (String) getAttributeInternal(EMBLEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Emblem.
     * @param value value to set the Emblem
     */
    public void setEmblem(String value) {
        setAttributeInternal(EMBLEM, value);
    }

    /**
     * Gets the attribute value for Website, using the alias name Website.
     * @return the value of Website
     */
    public String getWebsite() {
        return (String) getAttributeInternal(WEBSITE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Website.
     * @param value value to set the Website
     */
    public void setWebsite(String value) {
        setAttributeInternal(WEBSITE, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public SmCountryImpl getSmCountry() {
        return (SmCountryImpl) getAttributeInternal(SMCOUNTRY);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSmCountry(SmCountryImpl value) {
        setAttributeInternal(SMCOUNTRY, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAdminProvience() {
        return (EntityImpl) getAttributeInternal(ADMINPROVIENCE);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAdminProvience(EntityImpl value) {
        setAttributeInternal(ADMINPROVIENCE, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSmCountry1() {
        return (RowIterator) getAttributeInternal(SMCOUNTRY1);
    }


    /**
     * @param citycode key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer citycode) {
        return new Key(new Object[] { citycode });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        if (operation==DML_INSERT) {
           String result = ERPGlobalPLSQLClass.doGetPrimaryKeyValueModel(getDBTransaction(), "CITYCODE",this.getEntityDef().getSource(), null, null);
           populateAttributeAsChanged(CITYCODE, Integer.parseInt(result));
           result = ERPGlobalPLSQLClass.doGetPrimaryKeyValueModel(getDBTransaction(), "CITY_SHORT_CODE",this.getEntityDef().getSource(), null, null);
           populateAttributeAsChanged(CITYSHORTCODE, Integer.parseInt(result));
        }        
        super.doDML(operation, e);
    }
}

