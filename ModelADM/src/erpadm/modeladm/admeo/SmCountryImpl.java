package erpadm.modeladm.admeo;

import erpglobals.modelglobals.ERPEntityImpl;

import erpglobals.modelglobals.ERPGlobalPLSQLClass;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 07 16:30:22 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SmCountryImpl extends ERPEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Countrycode,
        Countryname,
        CapitalCitySno,
        ContinentSno,
        CreatedBy,
        CreatedDate,
        ImageName,
        LastUpdatedBy,
        LastUpdatedDate,
        NationalCurrencySno,
        NationalLanguageSno,
        SubContinentSno,
        CountryShortCode,
        CountryShortName,
        DialingCode,
        Iso2Code,
        Iso3Code,
        UnCode,
        IsActive,
        txtNationaCurrencyName,
        txtNationalLanguageName,
        txtCapitalCityName,
        AdminContinent,
        SmCity,
        SetCurrency,
        SetLanguage,
        SmCity1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COUNTRYCODE = AttributesEnum.Countrycode.index();
    public static final int COUNTRYNAME = AttributesEnum.Countryname.index();
    public static final int CAPITALCITYSNO = AttributesEnum.CapitalCitySno.index();
    public static final int CONTINENTSNO = AttributesEnum.ContinentSno.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int IMAGENAME = AttributesEnum.ImageName.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int NATIONALCURRENCYSNO = AttributesEnum.NationalCurrencySno.index();
    public static final int NATIONALLANGUAGESNO = AttributesEnum.NationalLanguageSno.index();
    public static final int SUBCONTINENTSNO = AttributesEnum.SubContinentSno.index();
    public static final int COUNTRYSHORTCODE = AttributesEnum.CountryShortCode.index();
    public static final int COUNTRYSHORTNAME = AttributesEnum.CountryShortName.index();
    public static final int DIALINGCODE = AttributesEnum.DialingCode.index();
    public static final int ISO2CODE = AttributesEnum.Iso2Code.index();
    public static final int ISO3CODE = AttributesEnum.Iso3Code.index();
    public static final int UNCODE = AttributesEnum.UnCode.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int TXTNATIONACURRENCYNAME = AttributesEnum.txtNationaCurrencyName.index();
    public static final int TXTNATIONALLANGUAGENAME = AttributesEnum.txtNationalLanguageName.index();
    public static final int TXTCAPITALCITYNAME = AttributesEnum.txtCapitalCityName.index();
    public static final int ADMINCONTINENT = AttributesEnum.AdminContinent.index();
    public static final int SMCITY = AttributesEnum.SmCity.index();
    public static final int SETCURRENCY = AttributesEnum.SetCurrency.index();
    public static final int SETLANGUAGE = AttributesEnum.SetLanguage.index();
    public static final int SMCITY1 = AttributesEnum.SmCity1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SmCountryImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpadm.modeladm.admeo.SmCountry");
    }


    /**
     * Gets the attribute value for Countrycode, using the alias name Countrycode.
     * @return the value of Countrycode
     */
    public Integer getCountrycode() {
        return (Integer) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Countrycode.
     * @param value value to set the Countrycode
     */
    public void setCountrycode(Integer value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for Countryname, using the alias name Countryname.
     * @return the value of Countryname
     */
    public String getCountryname() {
        return (String) getAttributeInternal(COUNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Countryname.
     * @param value value to set the Countryname
     */
    public void setCountryname(String value) {
        setAttributeInternal(COUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for CapitalCitySno, using the alias name CapitalCitySno.
     * @return the value of CapitalCitySno
     */
    public Integer getCapitalCitySno() {
        return (Integer) getAttributeInternal(CAPITALCITYSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CapitalCitySno.
     * @param value value to set the CapitalCitySno
     */
    public void setCapitalCitySno(Integer value) {
        setAttributeInternal(CAPITALCITYSNO, value);
    }

    /**
     * Gets the attribute value for ContinentSno, using the alias name ContinentSno.
     * @return the value of ContinentSno
     */
    public Integer getContinentSno() {
        return (Integer) getAttributeInternal(CONTINENTSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContinentSno.
     * @param value value to set the ContinentSno
     */
    public void setContinentSno(Integer value) {
        setAttributeInternal(CONTINENTSNO, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for ImageName, using the alias name ImageName.
     * @return the value of ImageName
     */
    public String getImageName() {
        return (String) getAttributeInternal(IMAGENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImageName.
     * @param value value to set the ImageName
     */
    public void setImageName(String value) {
        setAttributeInternal(IMAGENAME, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for NationalCurrencySno, using the alias name NationalCurrencySno.
     * @return the value of NationalCurrencySno
     */
    public Integer getNationalCurrencySno() {
        return (Integer) getAttributeInternal(NATIONALCURRENCYSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for NationalCurrencySno.
     * @param value value to set the NationalCurrencySno
     */
    public void setNationalCurrencySno(Integer value) {
        setAttributeInternal(NATIONALCURRENCYSNO, value);
    }

    /**
     * Gets the attribute value for NationalLanguageSno, using the alias name NationalLanguageSno.
     * @return the value of NationalLanguageSno
     */
    public Integer getNationalLanguageSno() {
        return (Integer) getAttributeInternal(NATIONALLANGUAGESNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for NationalLanguageSno.
     * @param value value to set the NationalLanguageSno
     */
    public void setNationalLanguageSno(Integer value) {
        setAttributeInternal(NATIONALLANGUAGESNO, value);
    }

    /**
     * Gets the attribute value for SubContinentSno, using the alias name SubContinentSno.
     * @return the value of SubContinentSno
     */
    public Integer getSubContinentSno() {
        return (Integer) getAttributeInternal(SUBCONTINENTSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubContinentSno.
     * @param value value to set the SubContinentSno
     */
    public void setSubContinentSno(Integer value) {
        setAttributeInternal(SUBCONTINENTSNO, value);
    }

    /**
     * Gets the attribute value for CountryShortCode, using the alias name CountryShortCode.
     * @return the value of CountryShortCode
     */
    public Integer getCountryShortCode() {
        return (Integer) getAttributeInternal(COUNTRYSHORTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryShortCode.
     * @param value value to set the CountryShortCode
     */
    public void setCountryShortCode(Integer value) {
        setAttributeInternal(COUNTRYSHORTCODE, value);
    }

    /**
     * Gets the attribute value for CountryShortName, using the alias name CountryShortName.
     * @return the value of CountryShortName
     */
    public String getCountryShortName() {
        return (String) getAttributeInternal(COUNTRYSHORTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryShortName.
     * @param value value to set the CountryShortName
     */
    public void setCountryShortName(String value) {
        setAttributeInternal(COUNTRYSHORTNAME, value);
    }

    /**
     * Gets the attribute value for DialingCode, using the alias name DialingCode.
     * @return the value of DialingCode
     */
    public String getDialingCode() {
        return (String) getAttributeInternal(DIALINGCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DialingCode.
     * @param value value to set the DialingCode
     */
    public void setDialingCode(String value) {
        setAttributeInternal(DIALINGCODE, value);
    }

    /**
     * Gets the attribute value for Iso2Code, using the alias name Iso2Code.
     * @return the value of Iso2Code
     */
    public String getIso2Code() {
        return (String) getAttributeInternal(ISO2CODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Iso2Code.
     * @param value value to set the Iso2Code
     */
    public void setIso2Code(String value) {
        setAttributeInternal(ISO2CODE, value);
    }

    /**
     * Gets the attribute value for Iso3Code, using the alias name Iso3Code.
     * @return the value of Iso3Code
     */
    public String getIso3Code() {
        return (String) getAttributeInternal(ISO3CODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Iso3Code.
     * @param value value to set the Iso3Code
     */
    public void setIso3Code(String value) {
        setAttributeInternal(ISO3CODE, value);
    }

    /**
     * Gets the attribute value for UnCode, using the alias name UnCode.
     * @return the value of UnCode
     */
    public String getUnCode() {
        return (String) getAttributeInternal(UNCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnCode.
     * @param value value to set the UnCode
     */
    public void setUnCode(String value) {
        setAttributeInternal(UNCODE, value);
    }

    /**
     * Gets the attribute value for IsActive, using the alias name IsActive.
     * @return the value of IsActive
     */
    public String getIsActive() {
        return (String) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsActive.
     * @param value value to set the IsActive
     */
    public void setIsActive(String value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for txtNationaCurrencyName, using the alias name txtNationaCurrencyName.
     * @return the value of txtNationaCurrencyName
     */
    public String gettxtNationaCurrencyName() {
        return (String) getAttributeInternal(TXTNATIONACURRENCYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtNationaCurrencyName.
     * @param value value to set the txtNationaCurrencyName
     */
    public void settxtNationaCurrencyName(String value) {
        setAttributeInternal(TXTNATIONACURRENCYNAME, value);
    }


    /**
     * Gets the attribute value for txtNationalLanguageName, using the alias name txtNationalLanguageName.
     * @return the value of txtNationalLanguageName
     */
    public String gettxtNationalLanguageName() {
        return (String) getAttributeInternal(TXTNATIONALLANGUAGENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtNationalLanguageName.
     * @param value value to set the txtNationalLanguageName
     */
    public void settxtNationalLanguageName(String value) {
        setAttributeInternal(TXTNATIONALLANGUAGENAME, value);
    }

    /**
     * Gets the attribute value for txtCapitalCityName, using the alias name txtCapitalCityName.
     * @return the value of txtCapitalCityName
     */
    public String gettxtCapitalCityName() {
        return (String) getAttributeInternal(TXTCAPITALCITYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtCapitalCityName.
     * @param value value to set the txtCapitalCityName
     */
    public void settxtCapitalCityName(String value) {
        setAttributeInternal(TXTCAPITALCITYNAME, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAdminContinent() {
        return (EntityImpl) getAttributeInternal(ADMINCONTINENT);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAdminContinent(EntityImpl value) {
        setAttributeInternal(ADMINCONTINENT, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSmCity() {
        return (RowIterator) getAttributeInternal(SMCITY);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getSetCurrency() {
        return (EntityImpl) getAttributeInternal(SETCURRENCY);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSetCurrency(EntityImpl value) {
        setAttributeInternal(SETCURRENCY, value);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getSetLanguage() {
        return (EntityImpl) getAttributeInternal(SETLANGUAGE);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSetLanguage(EntityImpl value) {
        setAttributeInternal(SETLANGUAGE, value);
    }


    /**
     * @return the associated entity SmCityImpl.
     */
    public SmCityImpl getSmCity1() {
        return (SmCityImpl) getAttributeInternal(SMCITY1);
    }

    /**
     * Sets <code>value</code> as the associated entity SmCityImpl.
     */
    public void setSmCity1(SmCityImpl value) {
        setAttributeInternal(SMCITY1, value);
    }


    /**
     * @param countrycode key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer countrycode) {
        return new Key(new Object[] { countrycode });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            String result =
                ERPGlobalPLSQLClass.doGetPrimaryKeyValueModel(getDBTransaction(), "COUNTRYCODE",
                                                              this.getEntityDef().getSource(), null, null);
            populateAttributeAsChanged(COUNTRYCODE, Integer.parseInt(result));
            result =
                ERPGlobalPLSQLClass.doGetPrimaryKeyValueModel(getDBTransaction(), "COUNTRY_SHORT_CODE",
                                                              this.getEntityDef().getSource(), null, null);
            populateAttributeAsChanged(COUNTRYSHORTCODE, Integer.parseInt(result));

        }
        super.doDML(operation, e);
    }
}

