package erpadm.modeladm.admeo;

import erpglobals.modelglobals.ERPEntityImpl;
import erpglobals.modelglobals.ERPGlobalPLSQLClass;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Mar 14 14:29:18 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AdminCompanyTypeImpl extends ERPEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CompanyTypeSno,
        CompanyTypeCode,
        CompanyTypeName,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        CompanyId,
        TypeLevel,
        IsActive,
        CompanyGroupSno,
        ParentCompanyTypeSno,
        CompanyTypeShortName,
        txtParentTypeName,
        TypeHierarchyPath,
        txtParentHierarchyPath,
        AdminCompany,
        AdminCompanyType,
        ParentCompanyTypeSnoAdminCompanyType,
        AccAdminCompanyTypeDupGlobalVO,
        AdminCompanyTypeTypeOneVC,
        AdminCompanyTypeSameGroupTypeVO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COMPANYTYPESNO = AttributesEnum.CompanyTypeSno.index();
    public static final int COMPANYTYPECODE = AttributesEnum.CompanyTypeCode.index();
    public static final int COMPANYTYPENAME = AttributesEnum.CompanyTypeName.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int COMPANYID = AttributesEnum.CompanyId.index();
    public static final int TYPELEVEL = AttributesEnum.TypeLevel.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int COMPANYGROUPSNO = AttributesEnum.CompanyGroupSno.index();
    public static final int PARENTCOMPANYTYPESNO = AttributesEnum.ParentCompanyTypeSno.index();
    public static final int COMPANYTYPESHORTNAME = AttributesEnum.CompanyTypeShortName.index();
    public static final int TXTPARENTTYPENAME = AttributesEnum.txtParentTypeName.index();
    public static final int TYPEHIERARCHYPATH = AttributesEnum.TypeHierarchyPath.index();
    public static final int TXTPARENTHIERARCHYPATH = AttributesEnum.txtParentHierarchyPath.index();
    public static final int ADMINCOMPANY = AttributesEnum.AdminCompany.index();
    public static final int ADMINCOMPANYTYPE = AttributesEnum.AdminCompanyType.index();
    public static final int PARENTCOMPANYTYPESNOADMINCOMPANYTYPE =
        AttributesEnum.ParentCompanyTypeSnoAdminCompanyType.index();
    public static final int ACCADMINCOMPANYTYPEDUPGLOBALVO = AttributesEnum.AccAdminCompanyTypeDupGlobalVO.index();
    public static final int ADMINCOMPANYTYPETYPEONEVC = AttributesEnum.AdminCompanyTypeTypeOneVC.index();
    public static final int ADMINCOMPANYTYPESAMEGROUPTYPEVO = AttributesEnum.AdminCompanyTypeSameGroupTypeVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AdminCompanyTypeImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpadm.modeladm.admeo.AdminCompanyType");
    }


    /**
     * Gets the attribute value for CompanyTypeSno, using the alias name CompanyTypeSno.
     * @return the value of CompanyTypeSno
     */
    public Integer getCompanyTypeSno() {
        return (Integer) getAttributeInternal(COMPANYTYPESNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyTypeSno.
     * @param value value to set the CompanyTypeSno
     */
    public void setCompanyTypeSno(Integer value) {
        setAttributeInternal(COMPANYTYPESNO, value);
    }

    /**
     * Gets the attribute value for CompanyTypeCode, using the alias name CompanyTypeCode.
     * @return the value of CompanyTypeCode
     */
    public Integer getCompanyTypeCode() {
        return (Integer) getAttributeInternal(COMPANYTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyTypeCode.
     * @param value value to set the CompanyTypeCode
     */
    public void setCompanyTypeCode(Integer value) {
        setAttributeInternal(COMPANYTYPECODE, value);
    }

    /**
     * Gets the attribute value for CompanyTypeName, using the alias name CompanyTypeName.
     * @return the value of CompanyTypeName
     */
    public String getCompanyTypeName() {
        return (String) getAttributeInternal(COMPANYTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyTypeName.
     * @param value value to set the CompanyTypeName
     */
    public void setCompanyTypeName(String value) {
        setAttributeInternal(COMPANYTYPENAME, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for CompanyId, using the alias name CompanyId.
     * @return the value of CompanyId
     */
    public Integer getCompanyId() {
        return (Integer) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyId.
     * @param value value to set the CompanyId
     */
    public void setCompanyId(Integer value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for TypeLevel, using the alias name TypeLevel.
     * @return the value of TypeLevel
     */
    public Integer getTypeLevel() {
        return (Integer) getAttributeInternal(TYPELEVEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TypeLevel.
     * @param value value to set the TypeLevel
     */
    public void setTypeLevel(Integer value) {
        setAttributeInternal(TYPELEVEL, value);
    }

    /**
     * Gets the attribute value for IsActive, using the alias name IsActive.
     * @return the value of IsActive
     */
    public String getIsActive() {
        return (String) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsActive.
     * @param value value to set the IsActive
     */
    public void setIsActive(String value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for CompanyGroupSno, using the alias name CompanyGroupSno.
     * @return the value of CompanyGroupSno
     */
    public Integer getCompanyGroupSno() {
        return (Integer) getAttributeInternal(COMPANYGROUPSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyGroupSno.
     * @param value value to set the CompanyGroupSno
     */
    public void setCompanyGroupSno(Integer value) {
        setAttributeInternal(COMPANYGROUPSNO, value);
    }

    /**
     * Gets the attribute value for ParentCompanyTypeSno, using the alias name ParentCompanyTypeSno.
     * @return the value of ParentCompanyTypeSno
     */
    public Integer getParentCompanyTypeSno() {
        return (Integer) getAttributeInternal(PARENTCOMPANYTYPESNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentCompanyTypeSno.
     * @param value value to set the ParentCompanyTypeSno
     */
    public void setParentCompanyTypeSno(Integer value) {
        setAttributeInternal(PARENTCOMPANYTYPESNO, value);
    }

    /**
     * Gets the attribute value for CompanyTypeShortName, using the alias name CompanyTypeShortName.
     * @return the value of CompanyTypeShortName
     */
    public String getCompanyTypeShortName() {
        return (String) getAttributeInternal(COMPANYTYPESHORTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyTypeShortName.
     * @param value value to set the CompanyTypeShortName
     */
    public void setCompanyTypeShortName(String value) {
        setAttributeInternal(COMPANYTYPESHORTNAME, value);
    }

    /**
     * Gets the attribute value for txtParentTypeName, using the alias name txtParentTypeName.
     * @return the value of txtParentTypeName
     */
    public String gettxtParentTypeName() {
        return (String) getAttributeInternal(TXTPARENTTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtParentTypeName.
     * @param value value to set the txtParentTypeName
     */
    public void settxtParentTypeName(String value) {
        setAttributeInternal(TXTPARENTTYPENAME, value);
    }

    /**
     * Gets the attribute value for TypeHierarchyPath, using the alias name TypeHierarchyPath.
     * @return the value of TypeHierarchyPath
     */
    public String getTypeHierarchyPath() {
        return (String) getAttributeInternal(TYPEHIERARCHYPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for TypeHierarchyPath.
     * @param value value to set the TypeHierarchyPath
     */
    public void setTypeHierarchyPath(String value) {
        setAttributeInternal(TYPEHIERARCHYPATH, value);
    }

    /**
     * Gets the attribute value for txtParentHierarchyPath, using the alias name txtParentHierarchyPath.
     * @return the value of txtParentHierarchyPath
     */
    public String gettxtParentHierarchyPath() {
        return (String) getAttributeInternal(TXTPARENTHIERARCHYPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtParentHierarchyPath.
     * @param value value to set the txtParentHierarchyPath
     */
    public void settxtParentHierarchyPath(String value) {
        setAttributeInternal(TXTPARENTHIERARCHYPATH, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAdminCompany() {
        return (RowIterator) getAttributeInternal(ADMINCOMPANY);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAdminCompanyType() {
        return (RowIterator) getAttributeInternal(ADMINCOMPANYTYPE);
    }

    /**
     * @return the associated entity AdminCompanyTypeImpl.
     */
    public AdminCompanyTypeImpl getParentCompanyTypeSnoAdminCompanyType() {
        return (AdminCompanyTypeImpl) getAttributeInternal(PARENTCOMPANYTYPESNOADMINCOMPANYTYPE);
    }

    /**
     * Sets <code>value</code> as the associated entity AdminCompanyTypeImpl.
     */
    public void setParentCompanyTypeSnoAdminCompanyType(AdminCompanyTypeImpl value) {
        setAttributeInternal(PARENTCOMPANYTYPESNOADMINCOMPANYTYPE, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> AccAdminCompanyTyperDupGlobalVO.
     */
    public RowSet getAccAdminCompanyTypeDupGlobalVO() {
        return (RowSet) getAttributeInternal(ACCADMINCOMPANYTYPEDUPGLOBALVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AdminCompanyTypeTypeOneVC.
     */
    public RowSet getAdminCompanyTypeTypeOneVC() {
        return (RowSet) getAttributeInternal(ADMINCOMPANYTYPETYPEONEVC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AdminCompanyTypeSameGroupTypeVO.
     */
    public RowSet getAdminCompanyTypeSameGroupTypeVO() {
        return (RowSet) getAttributeInternal(ADMINCOMPANYTYPESAMEGROUPTYPEVO);
    }


    /**
     * @param companyTypeSno key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer companyTypeSno) {
        return new Key(new Object[] { companyTypeSno });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
    
   /* if (operation!=DML_DELETE) {
           ViewObject vo = getDBTransaction().getRootApplicationModule().findViewObject("AdminCompanyTypeRO");
           RowSetIterator rsi =vo.createRowSetIterator(null);
           
            rsi.reset();
           while (rsi.hasNext()) {
           Row row = rsi.next();
            System.out.println(row.getAttribute("CompanyTypeName"));
           //...
           }
           rsi.closeRowSetIterator();
       }*/
        if (operation==DML_INSERT) {
            
            if (getParentCompanyTypeSno()==null) {
                ;
           }
           String result = ERPGlobalPLSQLClass.doGetPrimaryKeyValueModel(getDBTransaction(), "COMPANY_TYPE_SNO",this.getEntityDef().getSource(), null, null);
            populateAttributeAsChanged(TYPEHIERARCHYPATH,getParentCompanyTypeSno()==null?result:gettxtParentHierarchyPath()+"-".concat(result));
           populateAttributeAsChanged(COMPANYTYPESNO, Integer.parseInt(result));
            result = ERPGlobalPLSQLClass.doGetPrimaryKeyValueModel(getDBTransaction(), "COMPANY_TYPE_CODE",this.getEntityDef().getSource(), "COMPANY_ID",getCompanyId().toString());
            populateAttributeAsChanged(COMPANYTYPECODE, Integer.parseInt(result));
            
            //populateAttributeAsChanged(TYPEHIERARCHYPATH,getParentCompanyTypeSno()==null?getCompanyTypeSno():gettxtParentHierarchyPath()+"-".concat(getCompanyTypeSno().toString()));
            //populateAttributeAsChanged(TYPEHIERARCHYPATH,"THIS IS TEST");
            
        }        
        super.doDML(operation, e);
    }
}

